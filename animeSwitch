repeat wait() until game:IsLoaded()
local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/Volkinzz/Evokinz/main/GUI"))()
local Window = library:CreateWindow("Farm Insano")
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local Workspace = game:GetService("Workspace")
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local primaryPart = character:WaitForChild("HumanoidRootPart")
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
local localPlayer = game.Players.LocalPlayer
local ActChoose = workspace
if game.PlaceId ~= 9704927237 then
    
    local Tab1 = Window:CreateTab("Farmzada")
    local Sector1 = Tab1:CreateSector("History", "left")
        Sector1:AddDropdown("ActSelect(AutoUpdate!)",{"Act 1" , "Act 2" , "Act 3","Act 4","Act 5" }, false ,false , function(v)
            _G.ActSelect = v
        end)
        Sector1:AddToggle("AutoPlay", false, function(t)
            _G.AutoPlay = t
        end)
        Sector1:AddToggle("AutoReplay (ACTIVE AUTOPLAY TO WORK)", false, function(t)
            _G.Replay = t
        end)
        local Sector2 = Tab1:CreateSector("InGame", "Right")
        Sector2:AddTextbox("Height(OnlyNumber)" , "10" , function(w)
            _G.Height = w
        end)
        Sector2:AddTextbox("TWSPEED(OnlyNumber)" , "200" , function(w)
            _G.TWSpeed = w
        end)
        Sector2:AddDropdown("Method",{"Behind" , "Front" , "Over" , "Under" }, "Behind" ,false , function(v)
            _G.Method = v
        end)
        Sector2:AddToggle("AutoMob", false, function(t)
            _G.Automob = t
        end)
        Sector2:AddToggle("AutoMelee", false, function(t)
            _G.AutoMelee = t
        end)
        Sector2:AddToggle("AutoSkill", false, function(t)
            _G.AutoSkill = t
        end)
        Sector2:AddToggle("AutoAwakening", false, function(t)
            _G.AutoAwakening = t
        end)
        Sector2:AddToggle("AutoAwakeningFast(100%)", false, function(t)
            _G.AutoAwakeningFast = t
        end)
        Sector2:AddLabel("Get first 100% AWK BAR")
        Sector2:AddToggle("AutoWalk(IF HAVE OTHERS PLAYERS)", false, function(t)
            _G.AutoWalk = t
        end)
        Sector2:AddLabel("Just Walk to NPCS")
        local Sector3 = Tab1:CreateSector("Misc", "Right")
        Sector3:AddToggle("AutoRejoin (IF GLITCHES)", false, function(t)
            _G.AutoRejoin = t
        end)


        function rejoin()
            game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, game.JobId, game:GetService("Players").LocalPlayer)
        end
        local Config = {}
        function Save_Config()
            writefile("Character_SLH.json" , game:GetService("HttpService"):JSONEncode(Config))
            for i,v in pairs(Config) do
                Notification(1, "SmellLikehacker Hub", ("ConfigSaved: "..tostring(i).." "..tostring(v)), 10)
                wait(1)
            end
        end
        if isfile("Character_Volk.json") then
            Config = game:GetService("HttpService"):JSONDecode(readfile("Character_SLH.json"))
        end
        function melee()
            if _G.AutoMelee == true then
                game:GetService("ReplicatedStorage").RemoteObjects.KeyInputs:FireServer("M1", "D", workspace, CFrame.new(0,0,0) * CFrame.Angles(0,0,0))
            end
        end
        function skill()
            if _G.AutoSkill == true then
                game:GetService("ReplicatedStorage").RemoteObjects.KeyInputs:FireServer("A1", "D", workspace, CFrame.new(0,0,0) * CFrame.Angles(0,0,0))
                game:GetService("ReplicatedStorage").RemoteObjects.KeyInputs:FireServer("A2", "D", workspace, CFrame.new(0,0,0) * CFrame.Angles(0,0,0))
                game:GetService("ReplicatedStorage").RemoteObjects.KeyInputs:FireServer("A3", "D", workspace, CFrame.new(0,0,0) * CFrame.Angles(0,0,0))
                game:GetService("ReplicatedStorage").RemoteObjects.KeyInputs:FireServer("A4", "D", workspace, CFrame.new(0,0,0) * CFrame.Angles(0,0,0))
            end
        end
        function awakening()
            game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.G, false, game)
            game:GetService("VirtualInputManager"):SendKeyEvent(false, Enum.KeyCode.G, false, game)
        end

        local function getClosestMob()
            local dist, thing = math.huge
                for i, v in next, workspace.Alive:GetChildren() do
                    if v:IsA("Model") and v.Name ~= localPlayer.Name then
                        print(v)
                        local mag = (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.HumanoidRootPart.Position).magnitude
                        if mag < dist then
                            dist = mag 
                            thing = v
                        end
                    end
                end
            return thing
        end

        function Tween(P)
            game:GetService("TweenService"):Create(game.Players.LocalPlayer.Character.HumanoidRootPart,TweenInfo.new((getClosestMob().HumanoidRootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude/tonumber(_G.TWSpeed), Enum.EasingStyle.Linear),{CFrame = P}):Play()
        end

        local function hasOtherModels()
            for _, child in ipairs(workspace:FindFirstChild("Alive"):GetChildren()) do
                if child:IsA("Model") and child ~= character then 
                    return true 
                end
            end 
            return false
        end

        local function hasOtherTriggers()
            for _, child in ipairs(ActChoose.Parent:GetChildren()) do
                if child:IsA("Part") and child ~= character then
                    return true
                end
            end
            return false
        end

        function replay()
            print('Evento Replay iniciado')
            local args = {
            [1] = {
                ["Type"] = "AddToQueue",
                ["Queue"] = "Restart"
            }
            }
            game:GetService("ReplicatedStorage").RemoteObjects.CTS:FireServer(unpack(args))
            print('Evento Replay Terminado')
        end


        spawn(function() --CheckPlayer
            pcall(function()
                while task.wait() do
                    pcall(function()
                        if tonumber(#game.Players:GetPlayers()) > 0 then
                            _G.CheckPlayer = true
                        else
                            _G.CheckPlayer = false
                        end
                    end)
                end
            end)
        end)

        spawn(function() --CheckStage
            pcall(function()
                while task.wait() do
                    pcall(function()
                        if _G.ActSelect == "Act 1" then if workspace:FindFirstChild("Map"):FindFirstChild("Extra"):FindFirstChild("Trigger1") then  ActChoose = workspace:FindFirstChild("Map"):FindFirstChild("Extra"):FindFirstChild("Trigger1"):FindFirstChild("Trigger") end end
                        if _G.ActSelect == "Act 2" then if workspace:FindFirstChild("Map"):FindFirstChild("Extra"):FindFirstChild("Trigger2") then  ActChoose = workspace:FindFirstChild("Map"):FindFirstChild("Extra"):FindFirstChild("Trigger2"):FindFirstChild("Trigger") end end
                        if _G.ActSelect == "Act 3" then if workspace:FindFirstChild("Map"):FindFirstChild("Extra"):FindFirstChild("Trigger3") then  ActChoose = workspace:FindFirstChild("Map"):FindFirstChild("Extra"):FindFirstChild("Trigger3"):FindFirstChild("Trigger") end end
                        if _G.ActSelect == "Act 4" then if workspace:FindFirstChild("Map"):FindFirstChild("Extra"):FindFirstChild("Trigger4") then  ActChoose = workspace:FindFirstChild("Map"):FindFirstChild("Extra"):FindFirstChild("Trigger4"):FindFirstChild("Trigger") end end
                        if _G.ActSelect == "Act 5" then if workspace:FindFirstChild("Map"):FindFirstChild("Extra"):FindFirstChild("Trigger5") then  ActChoose = workspace:FindFirstChild("Map"):FindFirstChild("Extra"):FindFirstChild("Trigger5"):FindFirstChild("Trigger") end end
                    end)
                end
            end)
        end)

        spawn(function() --AutoMob
            pcall(function()
                while task.wait() do
                    pcall(function()
                        if _G.Automob == true and game.PlaceId ~= 9704927237 then
                           if _G.Method == "Behind" then
                                MethodFarm = CFrame.new(0,0,_G.Height) * CFrame.Angles(math.rad(0),0,0)
                            elseif _G.Method == "Front" then
                                MethodFarm = CFrame.new(0,0,-_G.Height) * CFrame.Angles(math.rad(0),1800,0)
                            elseif _G.Method == "Under" then
                                MethodFarm = CFrame.new(0,-_G.Height,0) * CFrame.Angles(math.rad(90),0,0)
                            elseif _G.Method == "Over" then
                                MethodFarm = CFrame.new(0,_G.Height,0)  * CFrame.Angles(math.rad(-90),0,0)
                            else
                                MethodFarm = CFrame.new(0,0,_G.Height)
                            end
                            local BeenASecond, V3 = false, Vector3.new(0, 0, 0)
                            for _, v in ipairs(game.Players.LocalPlayer.Character:GetDescendants()) do
                                if v.IsA(v, "BasePart") then
                                    v.Velocity, v.RotVelocity = V3, V3
                                end
                            end
                            Tween(getClosestMob().HumanoidRootPart.CFrame * MethodFarm or CFrame.new(0,0,_G.Height))
                        end
                    end)
                end
            end)
        end)
        
        spawn(function() --Automelee
            pcall(function()
                while wait(0.2) do
                    pcall(function()
                        if _G.CheckPlayer == true then
                            if game.PlaceId ~= 9704927237 then
                                if _G.AutoMelee == true or _G.AutoAwakeningFast == true then
                                    melee()
                                end
                            end
                        end
                    end)
                end
            end)
        end)

        spawn(function() --Autoskill
            pcall(function()
                while wait(0.2) do
                    pcall(function()
                        if _G.AutoSkill == true and _G.AutoAwakeningFast == false then
                            if game.PlaceId ~= 9704927237 then
                                skill()
                            end
                        end
                        if game.PlaceId ~= 9704927237 and _G.AutoSkill == true and game.Players.LocalPlayer.Data.Awakened.Value == true and _G.AutoAwakeningFast == true then
                            skill()
                        end
                        
                    end)
                end
            end)
        end)

        spawn(function() --AutoAwakening
            pcall(function()
                while task.wait() do
                    pcall(function()
                        if _G.AutoAwakening == true then
                            if game.PlaceId ~= 9704927237 then
                                if game.Players.LocalPlayer.PlayerGui.ScreenGui.HUD.Awakening.Frame.Bar.ImageLabel.UIGradient.twn.Value > 0.55 and _G.AutoAwakeningFast == false then
                                    if game.Players.LocalPlayer.Data.Awakened.Value == false then
                                        awakening()
                                    end
                                end
                                if game.Players.LocalPlayer.PlayerGui.ScreenGui.HUD.Awakening.Frame.Bar.ImageLabel.UIGradient.twn.Value > 0.95 and _G.AutoAwakeningFast == true then
                                    if game.Players.LocalPlayer.Data.Awakened.Value == false then
                                        awakening()
                                    end
                                end
                            end
                        end
                    end)
                end
            end)
        end)

        spawn(function() --AutoPlay
            pcall(function()
                while wait(0.2) do
                    pcall(function()
                        if _G.AutoPlay then
                            if not hasOtherModels() and hasOtherTriggers()  then
                                local tweenInfo = TweenInfo.new( 2,  Enum.EasingStyle.Linear, Enum.EasingDirection.Out, 0, false, 0)
                                local goal = {}
                                goal.CFrame = ActChoose.CFrame
                                local tween = TweenService:Create(humanoidRootPart, tweenInfo, goal)
                                tween:Play()
                            end
                        end
                    end)
                end
            end)
        end)

        spawn(function() --AutoReplay
            pcall(function()
                while wait(0.1) do
                    pcall(function()
                        if _G.Replay then
                            if game.PlaceId ~= 970492737 then
                                if game.Players.LocalPlayer.PlayerGui.ScreenGui.Rewards.Visible == true then
                                    replay()
                                    print("Funcao replay foi")
                                    wait(5)
                                end
                            end
                        end
                    end)
                end
            end)
        end)

        spawn(function() --AutoRejoin
            pcall(function()
                while wait(0.1) do
                    pcall(function()
                        if _G.AutoRejoin then
                            if game.PlaceId ~= 970492737 then
                                if not character:FindFirstChild("HumanoidRootPart") then
                                    rejoin()
                                end
                            end
                        end
                    end)
                end
            end)
        end)
        local TabSetting = Window:CreateTab("Misc")
        local Setting1 = TabSetting:CreateSector("Section1", "left")

        Setting1:AddTextbox("Speed" , "16" , function(w)
            _G.Speed = w
        end)
        Setting1:AddToggle("WalkSpeed", false, function(t)
            _G.WalkSpeed = t
        end)
        Setting1:AddToggle("CloseGuiAfterExecute", false, function(o)
            _G.CloseGuiAfterExecute = o
        end)
        Setting1:AddToggle("AutoExecute", false, function(o)
            _G.AutoExec = o
        end)
        Setting1:AddButton("Rejoin" , function()
            game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, game.JobId, game:GetService("Players").LocalPlayer)
        end)
        spawn(function()
            pcall(function()
                while task.wait() do
                    pcall(function()
                        if _G.WalkSpeed then
                            pcall(function()
                                game.Players.LocalPlayer.character.Humanoid.WalkSpeed = tonumber(_G.Speed)
                            end)
                        end
                    end)
                end
            end)
        end)
        local Setting2 = TabSetting:CreateSector("Section2", "Right")
        Setting2:AddDropdown("StatGuiPosition", {"Center","Left","Right"}, "Right", false, function(h)
            game:GetService("CoreGui").StatBySmell.Frame.UIListLayout.HorizontalAlignment = h
        end)
        Setting2:AddDropdown("CreditGuiPosition", {"Center","Left","Right"}, "Left", false, function(h)
            game:GetService("CoreGui").Credit.FRame.UIListLayout.HorizontalAlignment = h
        end)
        Setting2:AddToggle("StatGui", true, function(o)
            game:GetService("CoreGui").StatBySmell.Enabled = o
        end)
        Setting2:AddToggle("CreditGui", true, function(o)
            game:GetService("CoreGui").Credit.Enabled = o
        end)
        Setting2:AddToggle("BootsWhitescreen", false, function(o)
    	    _G.BootsWhitescreen = o
        end)
        Setting2:AddButton("infiniteyield" , function()
            loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
        end)
        spawn(function()
        pcall(function()
            while wait() do
                pcall(function()
                    if _G.CloseGuiAfterExecute then
                        pcall(function()
                            wait()
                            for i,v in pairs(game:GetService("CoreGui"):GetChildren()) do
                                if v:FindFirstChild("main") then
                                    v.main.Visible = not v.main.Visible
                                end
                            end
                            wait(99999999999999999999999)
                        end)
                    end
                end)
            end
        end)
        end)
        spawn(function()
        pcall(function()
            while wait() do
                if _G.BootsWhitescreen then
                    wait()
                    local v0;local v1=game;local v2=v1.Workspace;local v3=v1.Lighting;local v4=v2.Terrain;v4.WaterWaveSize=0;v4.WaterWaveSpeed=0;v4.WaterReflectance=0;v4.WaterTransparency=0;v3.GlobalShadows=false;v3.FogEnd=8999999488;v3.Brightness=0;settings().Rendering.QualityLevel="Level01";for v18,v19 in pairs(v1:GetDescendants()) do if (v19:IsA("Part") or v19:IsA("Union") or v19:IsA("CornerWedgePart") or v19:IsA("TrussPart")) then v19.Material="Plastic";v19.Reflectance=0;elseif (v19:IsA("Decal") or (v19:IsA("Texture") and v0)) then v19.Transparency=1;elseif (v19:IsA("ParticleEmitter") or v19:IsA("Trail")) then v19.Lifetime=NumberRange.new(0);elseif v19:IsA("Explosion") then v19.BlastPressure=1;v19.BlastRadius=1;elseif (v19:IsA("Fire") or v19:IsA("SpotLight") or v19:IsA("Smoke")) then v19.Enabled=false;elseif v19:IsA("MeshPart") then v19.Material="Plastic";v19.Reflectance=0;v19.TextureID=10385902758728956;end end for v20,v21 in pairs(v3:GetChildren()) do if (v21:IsA("BlurEffect") or v21:IsA("SunRaysEffect") or v21:IsA("ColorCorrectionEffect") or v21:IsA("BloomEffect") or v21:IsA("DepthOfFieldEffect")) then v21.Enabled=false;end end local v13=game:GetService("UserInputService");local v14=game:GetService("RunService");local v15=function()v14:Set3dRenderingEnabled(false);return;end;local v16=function()v14:Set3dRenderingEnabled(true);return;end;local v17=function()v13.WindowFocusReleased:Connect(v15);v13.WindowFocused:Connect(v16);return;end;v17();
                    wait(99999999999999999999999)
                end
            end
        end)
        end)


        game:GetService("Players").LocalPlayer.Idled:connect(function()
            game:GetService("VirtualUser"):CaptureController()
            game:GetService("VirtualUser"):ClickButton2(Vector2.new())
        end)
        library:ConfigSystem("AnimeSwitch"):Load()
        while wait(1) do
            pcall(function()
                library:ConfigSystem("AnimeSwitch"):Save()
            end)
        end
    local queueteleport = syn and syn.queue_on_teleport or queue_on_teleport or fluxus or fluxus.queue_on_teleport
    local teleportscripts = "loadstring(game:HttpGet('https://raw.githubusercontent.com/Volkinzz/Evokinz/main/animeSwitch'))()"
    if shared.AutoLoad then
    error("AutoLoad Execute")
    return
    else
    shared.AutoLoad = true
    end
    queueteleport(teleportscripts)
        
else
    local Tab1 = Window:CreateTab("Hub")
    local Sector1 = Tab1:CreateSector("History", "left")
    StoryStages = {}
    for _, child in ipairs(game.Players.LocalPlayer.PlayerGui.ScreenGui.Menu.Windows.Queue.Story.SagaSelection.ScrollingFrame:GetChildren()) do
        if child.ClassName == "Frame"  then
            table.insert(StoryStages, child.Name)
        end
    end
    StoryActs = {}
    local counter = 1
    local teste = ""
    for _, child in ipairs(game.Players.LocalPlayer.PlayerGui.ScreenGui.Menu.Windows.Queue.Story.StageSelection.ScrollingFrame:GetChildren()) do
        if child.ClassName == "Frame"  then
            teste = "Act " .. counter
            table.insert(StoryActs,(counter <6 ) and teste or "Infinite")
            counter = counter + 1
        end
    end
    Sector1:AddDropdown("MapSelection(AutoUpdate!)",StoryStages, false ,false , function(v)
        _G.MapSelection = v
    end)
    Sector1:AddDropdown("ActSelection(AutoUpdate!)",StoryActs, false ,false , function(v)
        _G.ActSelection = v
    end)
    Sector1:AddTextbox("Cooldown JoinHistory(OnlyNumber)" , "5" , function(w)
        _G.CooldownOnlobby = w
    end)
    Sector1:AddToggle("AutoJoin", false, function(t)
        _G.AutoJoin = t
    end)
    Sector1:AddToggle("Nightmare", false, function(t)
        _G.AutoNightmare = t
    end)
    Sector1:AddToggle("FriendsOnly", false, function(t)
        _G.AutoFriends = t
    end)
    local Sector2 = Tab1:CreateSector("Raid", "right")
    Sector2:AddDropdown("RaidSelection(AutoUpdate!)",RaidStages, false ,false , function(v)
        _G.RaidSelection = v
    end)
    Sector2:AddTextbox("Cooldown JoinRaid(OnlyNumber)" , "5" , function(w)
        _G.CooldownOnlobbyRaid = w
    end)
    Sector2:AddToggle("AutoJoinRaid", false, function(t)
        _G.AutoJoinRaid = t
    end)

    local TabSetting = Window:CreateTab("Misc")
    local Setting1 = TabSetting:CreateSector("Section1", "left")

        Setting1:AddTextbox("Speed" , "16" , function(w)
            _G.Speed = w
        end)
        Setting1:AddToggle("WalkSpeed", false, function(t)
            _G.WalkSpeed = t
        end)
        Setting1:AddToggle("CloseGuiAfterExecute", false, function(o)
            _G.CloseGuiAfterExecute = o
        end)
        Setting1:AddToggle("AutoExec", false, function(t)
            _G.AutoExec = t
        end)
        Setting1:AddButton("Rejoin" , function()
            game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, game.JobId, game:GetService("Players").LocalPlayer)
        end)
        spawn(function()
            pcall(function()
                while task.wait() do
                    pcall(function()
                        if _G.WalkSpeed then
                            pcall(function()
                                game.Players.LocalPlayer.character.Humanoid.WalkSpeed = tonumber(_G.Speed)
                            end)
                        end
                    end)
                end
            end)
        end)
        spawn(function()
            pcall(function()
                while task.wait() do
                    pcall(function()
                        if _G.ActSelection == "Act 1" then local act = 1 elseif _G.ActSelection == "Act 2" then local act = 2 elseif _G.ActSelection == "Act 3" then local act = 3 elseif _G.ActSelection == "Act 4" then local act = 4 elseif _G.ActSelection == "Act 5" then local act = 5 elseif _G.ActSelection == "Act 6" then local act = 99 end
                    end)
                end
            end)
        end)
        
        spawn(function()
            pcall(function()
                while wait(_G.CooldownOnlobby) do
                    pcall(function()
                        if _G.AutoJoin then
                            local position = Vector3.new(2937.44556, 197.692139, -256.927124)
                            local orientation = CFrame.new(0.106618822, -0.139094979, 0.984522641)
                            local targetCFrame = CFrame.new(position) * orientation
                            character:WaitForChild("HumanoidRootPart").CFrame = targetCFrame
                            wait()
                            local args = {
                                [1] = {
                                    ["Type"] = "RoomAction",
                                    ["Action"] = "Create",
                                    ["RoomProperties"] = {
                                        ["Difficulty"] = _G.AutoNightmare and "Nightmare" or "Normal",
                                        ["StageType"] = "Story",
                                        ["Destination"] = _G.MapSelection,
                                        ["Stage"] = act,
                                        ["FriendsOnly"] = _G.AutoFriends
                                    }
                                }
                            }
                            game:GetService("ReplicatedStorage"):WaitForChild("RemoteObjects"):WaitForChild("CTS"):FireServer(unpack(args))
                            wait()
                            local args = {
                                [1] = {
                                    ["Action"] = "Start",
                                    ["Type"] = "RoomAction"
                                }
                            }
                            game:GetService("ReplicatedStorage"):WaitForChild("RemoteObjects"):WaitForChild("CTS"):FireServer(unpack(args))
                        end
                    end)
                end
            end)
        end)


        local Setting2 = TabSetting:CreateSector("Section2", "Right")
        Setting2:AddDropdown("StatGuiPosition", {"Center","Left","Right"}, "Right", false, function(h)
            game:GetService("CoreGui").StatBySmell.Frame.UIListLayout.HorizontalAlignment = h
        end)
        Setting2:AddDropdown("CreditGuiPosition", {"Center","Left","Right"}, "Left", false, function(h)
            game:GetService("CoreGui").Credit.FRame.UIListLayout.HorizontalAlignment = h
        end)
        Setting2:AddToggle("StatGui", true, function(o)
            game:GetService("CoreGui").StatBySmell.Enabled = o
        end)
        Setting2:AddToggle("CreditGui", true, function(o)
            game:GetService("CoreGui").Credit.Enabled = o
        end)
        Setting2:AddToggle("BootsWhitescreen", false, function(o)
    	    _G.BootsWhitescreen = o
        end)
        Setting2:AddButton("infiniteyield" , function()
            loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
        end)


        spawn(function()
        pcall(function()
            while wait() do
                pcall(function()
                    if _G.CloseGuiAfterExecute then
                        pcall(function()
                            wait()
                            for i,v in pairs(game:GetService("CoreGui"):GetChildren()) do
                                if v:FindFirstChild("main") then
                                    v.main.Visible = not v.main.Visible
                                end
                            end
                            wait(99999999999999999999999)
                        end)
                    end
                end)
            end
        end)
        end)

    --12940506339
    spawn(function()
        pcall(function()
            while wait() do
                if _G.BootsWhitescreen then
                    wait()
                    local v0;local v1=game;local v2=v1.Workspace;local v3=v1.Lighting;local v4=v2.Terrain;v4.WaterWaveSize=0;v4.WaterWaveSpeed=0;v4.WaterReflectance=0;v4.WaterTransparency=0;v3.GlobalShadows=false;v3.FogEnd=8999999488;v3.Brightness=0;settings().Rendering.QualityLevel="Level01";for v18,v19 in pairs(v1:GetDescendants()) do if (v19:IsA("Part") or v19:IsA("Union") or v19:IsA("CornerWedgePart") or v19:IsA("TrussPart")) then v19.Material="Plastic";v19.Reflectance=0;elseif (v19:IsA("Decal") or (v19:IsA("Texture") and v0)) then v19.Transparency=1;elseif (v19:IsA("ParticleEmitter") or v19:IsA("Trail")) then v19.Lifetime=NumberRange.new(0);elseif v19:IsA("Explosion") then v19.BlastPressure=1;v19.BlastRadius=1;elseif (v19:IsA("Fire") or v19:IsA("SpotLight") or v19:IsA("Smoke")) then v19.Enabled=false;elseif v19:IsA("MeshPart") then v19.Material="Plastic";v19.Reflectance=0;v19.TextureID=10385902758728956;end end for v20,v21 in pairs(v3:GetChildren()) do if (v21:IsA("BlurEffect") or v21:IsA("SunRaysEffect") or v21:IsA("ColorCorrectionEffect") or v21:IsA("BloomEffect") or v21:IsA("DepthOfFieldEffect")) then v21.Enabled=false;end end local v13=game:GetService("UserInputService");local v14=game:GetService("RunService");local v15=function()v14:Set3dRenderingEnabled(false);return;end;local v16=function()v14:Set3dRenderingEnabled(true);return;end;local v17=function()v13.WindowFocusReleased:Connect(v15);v13.WindowFocused:Connect(v16);return;end;v17();
                    wait(99999999999999999999999)
                end
            end
        end)
    end)






    game:GetService("Players").LocalPlayer.Idled:connect(function()
            game:GetService("VirtualUser"):CaptureController()
            game:GetService("VirtualUser"):ClickButton2(Vector2.new())
        end)
    library:ConfigSystem("AnimeSwitchMenu"):Load()
        while wait(1) do
            pcall(function()
                library:ConfigSystem("AnimeSwitchMenu"):Save()
            end)
        end
    
    local queueteleport = syn and syn.queue_on_teleport or queue_on_teleport or fluxus or fluxus.queue_on_teleport
    local teleportscripts = "loadstring(game:HttpGet('https://raw.githubusercontent.com/Volkinzz/Evokinz/main/animeSwitch'))()"
    if shared.AutoLoad then
    error("AutoLoad Execute")
    return
    else
    shared.AutoLoad = true
    end
    queueteleport(teleportscripts)
end
